export default {
  sentinel: {
    in_progress: {
      title: 'Helium Blockchain Stopped',
      body: 'Helium is transitioning to Solana.',
    },
    complete: {
      title: 'App update needed',
      body: 'Helium has transitioned to Solana. Update your app to manage your account on Solana. No other action required.',
    },
  },
  accountAssign: {
    AccountNamePlaceholder: 'Wallet Name',
    setDefault: 'Set as Default',
    title: 'Name this wallet',
    nameExists: 'Name already exists',
  },
  errors: {
    account: 'Account missing',
    accountNotSelected: 'There must be a wallet selected to submit a txn',
    swap: {
      routes: 'Swap routes missing',
      tx: 'Swap tx not generated',
    },
  },
  hotspotOnboarding: {
    scan: {
      title: 'Choose your Hotspot',
      hotspotsFound: '{{count}} Hotspots were found',
      start: 'Scan Again',
      stop: 'Stop Scan',
      notEnabled: 'Bluetooth is not enabled',
      scanning: 'Scanning for Hotspots',
    },
    settings: {
      title: 'Settings',
      hotspotError: 'Hotspot Returned Error: ',
      notReady: 'Not Ready to Onboard',
    },
    diagnostics: {
      title: 'Diagnostics',
      get: 'Get Diagnostics',
      noneFound: 'No diagnostics found',
    },
    wifiSettings: {
      title: 'Share Wi-Fi',
      subtitle:
        'Choose the Wi-Fi network you’d like your Hotspot to connect to.',
      remove: 'Would you like to remove {{network}}?',
      available: 'Available Networks',
      configured: 'Configured Networks',
      setup: 'Setup Wifi',
    },
    wifiSetup: {
      title: 'Enter Password',
      subtitle: 'Provide password for {{ network }}',
      enterPassword: 'Enter Password',
      setWifi: 'Set Wi-Fi',
    },
    onboarding: {
      hotspotConnected: 'Hotspot Connected',
      hotspotConnectedBody:
        'Awesome! Your Hotspot now has an internet connection.',
      confirmLocation: 'Confirm Location',
      title: 'Onboarding',
      subtitle:
        'Onboard your Hotspot to the {{network}} network. After onboarding this Hotspot, you will be able to set the location and antenna details.',
      onboard: 'Onboard Hotspot',
      onboardAndPay: 'Onboard and Pay Maker Fees',
      responsible:
        'In almost all cases, Hotspots manufacturers are responsible for paying the onboarding and initial location assert fees.',
      // eslint-disable-next-line no-template-curly-in-string
      pay: 'I understand that the ${{usd}} onboarding fee was included in the purchase price of my Hotspot and the manufacturer is responsible for paying that fee.  Nonetheless, I would like to pay the ${{usd}} onboarding fee out of my wallet to onboard my Hotspot now. I will also pay the ${{assertUsd}} fee to assert this hotspot location.',
      wrongOwner: 'You do not own this hotspot, so you cannot onboard it',
      notEnoughSol: 'You do not have enough sol to self-onboard',
      notEnoughDc: 'You do not have enough DC or HNT to self-onboard',
      hotspotNotFound:
        'This hotspot does not exist in the onboarding server. Contact your manufacturer to have them approve hotspot with id {{onboardAddress}}',
      makerNotFound: 'No manufacturer found for this hotspot',
      manufacturerMissing:
        'The manufacturer of your hotspot ({{name}}) does not have enough {{tokens}} for you to complete onboarding.',
      twoSolutions: 'At this time there are two solutions:',
      optionContact:
        'Contact the manufacturer and request assistance onboarding your Hotspot.',
      optionPay:
        // eslint-disable-next-line no-template-curly-in-string
        'Pay ${{usd}} in Data Credits or burn HNT to onboard my Hotspot. I will also pay the ${{assertUsd}} to assert this hotspot location.',
      contact: 'Contact Manufacturer',
      failedToFind:
        'Failed to find onboarded hotspot. Check your hotspots page, as it may have been onboarded. This can happen due to network issues',
    },
    selectOnboardingMethod: {
      title: 'Select Connection Method',
      subtitle: 'Select your connection method to continue.',
    },
  },
  accountImport: {
    accountLimit:
      'You have reached the wallet limit.\nTo add another wallet, remove a wallet account and try again.',
    accountLimitLedger:
      'You have reached the wallet limit.\nTo add another wallet, uncheck a wallet and try again.',
    alert: {
      body: "This seed phrase doesn't correspond to a Helium wallet",
      title: 'Error',
    },
    cli: {
      alert: {
        body: 'Invalid Password',
        title: 'Password entered is invalid. Please try again.',
      },
      import: {
        body: 'Generate a password-secured QR code in <codeHighlight>helium-wallet-rs</codeHighlight> by typing <codeHighlight>export</codeHighlight>',
        buttonText: 'Scan QR Code',
        title: 'Import CLI',
      },
      password: {
        body: 'Enter the password used to encrypt the CLI Wallet to complete import.',
        buttonText: 'Decrypt and Import',
        title: 'Decrypting Wallet...',
      },
    },
    cliImport: 'CLI',
    complete: {
      subtitle: 'This will just take a moment.',
      title: 'Recovering Wallet...',
    },
    confirm: {
      next: 'Submit Seed Phrase',
      subtitle:
        'Here are the {{totalWords}} words you’ve entered. Tap on any of them if you need to edit.',
      title: 'Please confirm your seed phrase',
    },
    pickKeyType: 'Pick Security Key Type:',
    recoveryPhrase: 'Secret Phrase',
    keyImport: 'Private Key',
    subTitle:
      'To import your existing Helium wallet, enter its <blue.500>12</blue.500> or <pink.500>24</pink.500> word security key.',
    title: 'Import\nWallet',
    wordEntry: {
      changeWordAmount: 'Change to a {{totalWords}}-word recovery phrase',
      placeholder: '{{ordinal}} word',
      title: "Enter your\nwallet's 12 or 24\nsecurity words.",
      word: 'Word {{ordinal}}',
    },
    privateKey: {
      title: 'Import Private Key',
      needsMigration: 'Helium L1 Wallet, needs to be migrated to Solana',
      selectAccounts: 'Select Accounts',
      selectAccountsBody:
        'A secret phrase can be used to generate multiple wallets by using derivation paths. The following derivation paths have been automatically detected. Select the wallets you would like to import.',
      paste: 'Copy and paste your private key.',
      inputPlaceholder: 'Your private key...',
      error: 'Invalid Private Key',
      errorPassword: 'Invalid Password',
      exists:
        'The wallet you\'re importing already exists as "{{alias}}". No further action is required.',
      body: 'You are importing a private key with the following public key.',
      action: 'Import Wallet',
      passwordError: 'You must enter a password to decrypt your private key',
      passwordPlaceholder: 'Enter Password',
    },
  },
  accountSetup: {
    confirm: {
      forgot: 'I forgot my words',
      subtitle: 'Which word below was your',
      subtitleOrdinal: 'What was\nWord {{ordinal}}?',
      title: 'Please confirm your words',
    },
    confirmPin: {
      subtitle: 'Re-enter your PIN',
      title: 'Repeat PIN',
    },
    createButtonTitle: 'Create a Seed Phrase',
    createImport: {
      create: 'Create a new Wallet',
      helperText:
        'Coming from Helium App? Use the\nsame 12 words to import a Wallet.',
      import: 'Import a Wallet',
      importPrivateKey: 'Import a Private Key',
      ledger: 'Pair with Ledger',
      title: 'What would\nyou like to do?',
      keystone: 'Connect Keystone to Wallet',
    },
    createPin: {
      subtitle: 'Let’s secure your wallet with a PIN Code.',
      title: 'Set PIN Code',
    },
    passphrase: {
      next: 'I have written these down',
      subtitle1:
        'These words represent your private key. Write them down and never share with anyone.',
      subtitle2: 'No one can recover these words',
      title: 'Keep these\nwords safe',
    },
    subtitle1:
      'Your 24-word seed phrase can be used to generate multiple sub-wallets.',
    subtitle2:
      'Please ensure these are written down, kept safe, and never shared.',
    title: 'Create New\nSeed Phrase',
  },
  airdropScreen: {
    title: 'Token Faucet',
    subtitle: 'Airdrop tokens to test your wallet.',
    airdrop: 'Airdrop',
    airdropTicker: 'Airdrop {{ticker}}',
    error: 'Airdrop failed. Please try again later.',
  },
  accountsScreen: {
    activity: 'Activity',
    allFilterFooter: "You've reached the end of your activity.",
    filter: 'Filter',
    filterTransactions: 'Filter Transactions',
    filterTypes: {
      all: 'All Activity',
      in: 'Transactions in',
      out: 'Transactions out',
      delegate: 'Delegated',
      mint: 'Received',
    },
    solWarning:
      'Your balance may not have enough SOL to cover all transactions. Solana wallets require a minimum of 0.00089088 SOL. We recommend keeping greater than 0.02 sol in your wallet for the best experience',
    solSwap: 'Swap Tokens To SOL',
    hideFilters: 'Hide Filters',
    myTransactions: 'My Transactions',
    showFilters: 'Show Filters',
    title: 'My {{ticker}}',
    tokens: 'Tokens',
    chooseCurrency: 'Choose Currency',
    tokenBalance: '{{amount}} <secondaryText>{{ticker}}</secondaryText>',
    delegatedBalance: '{{amount}} Delegated',
    receivedBalance: '{{amount}} Received',
  },
  solanaMigrationScreen: {
    migrationComplete: "You've successfully migrated your tokens!",
    migrationComplete2: 'Navigate back to your wallet',
    error: 'Migration failed. Please try again later.',
    disableSolana: 'Disable Solana Preview',
    retry: 'Retry',
    migrating: 'Migrating your wallet to Solana',
    migratingBody: 'Please wait while we move your wallet over to Solana!',
    migrateLater: 'Migrate Later',
    done: 'Return to Home',
  },
  collectablesScreen: {
    title: 'Collectables',
    metadata: 'Metadata',
    transfer: 'Transfer',
    transferComplete: 'Asset Transferred!',
    returnToCollectables: 'Return to Collectables',
    transferFee: '<b>Fee</b> <secondaryText> {{ amount }} SOL </secondaryText>',
    transferingNftTitle: 'Transferring NFT...',
    transferActions: 'Transfer Actions',
    transferTo: 'Transfer to',
    transferError: 'Transfer failed. Please try again later.',
    transferCollectable: 'Transfer Collectable',
    transferingNftBody:
      'You can exit this screen while you wait. We’ll update your collection momentarily.',
    rewardsError: 'Reward redemption failed. Please try again later.',
    claimingRewards: 'Claiming your Rewards...',
    claimingRewardsBody:
      'You can exit this screen while you wait. We’ll update your Wallet momentarily.',
    claimComplete: 'Rewards Claimed!',
    claimCompleteBody: 'Your tokens have been added to your wallet.',
    claimError: 'Claim failed. Please try again later.',
    transferCollectableAlertTitle:
      'Are you sure you will like to transfer your collectable?',
    transferCollectableAlertBody: 'This action is irreversible.',
    collectables: {
      noTraitType: 'No trait type',
      noTraitValue: 'No trait value',
      noDescription: 'No description',
      description: 'Description',
      properties: 'Properties',
    },
    nfts: {
      title: 'NFTs',
      nftDetailTitle: 'NFT Detail',
      setAsAvatar: 'Set as Avatar',
    },
    hotspots: {
      title: 'Hotspots',
      hotspotDetailTitle: 'Hotspot Detail',
      pendingRewardsTitle: 'Pending Rewards',
      claimRewards: 'Claim Rewards',
      manage: 'Manage',
      hotspotActions: 'Hotspot Actions',
      pendingRewards: '{{ amount }} {{ ticker }}',
      claimAllRewards: 'Claim all Rewards',
      hotspotClaimMessage:
        'Since your last claim, \nyour Hotspot has earned...',
      hotspotsClaimMessage:
        'Since your last claim, \nyour Hotspots have earned...',
      addToAccount: 'Add to Account',
      addAllToAccount: 'Add all to account',
      hotspotCount: '{{count}} Hotspot',
      hotspotCount_one: '{{count}} Hotspot',
      hotspotCount_other: '{{count}} Hotspots',
      hotspotCount_plural: '{{count}} Hotspots',
      chooseAmountOfHotspots: 'Choose amount of hotspots to show per page',
      connect: 'Connect Hotspot',
      openMap: 'Open Map',
      copyEccCompact: 'Copy Hotspot Key',
      onboard: {
        title: 'Repair Onboarding',
        which:
          'On rare occasions, onboarding a hotspot can fail. Use this utility to repair the hotspot. Which Sub Network does the hotspot use? If the network is not in this list, your hotspot is properly onboarded.',
      },
      viewInExplorer: 'View in Explorer',
      assertLocation: 'Assert Location',
      transferHotspot: 'Transfer Hotspot',
      showMetadata: 'Show Metadata',
      antennaSetup: 'Antenna Setup',
      map: {
        back: 'Back to Hotspots List',
        type: '{{type}} Hotspots',
        transmitScale: 'Transmit Scale',
      },
      selectActive: {
        title: 'Select Hotspot',
        which: 'Which hotspot would you like to select as active?',
      },
    },
  },
  activityScreen: {
    title: 'Activity',
    subtitle: 'View your blockchain history.',
    transactionSuccessful: 'Transaction Successful',
    transactionFailed: 'Transaction Failed',
    viewOnExplorer: 'View on Explorer',
    selectExplorer: 'Select Preferred Hotspot Explorer',
    selectExplorerSubtitle: 'Your choice will be saved in App Settings',
    activityDetails: 'Activity Details',
    myAccount: 'My Account',
    scamWarning:
      'NFTs sent to you may contain links to scams. Do not share your secret words with anyone, or sign transactions on unknown websites.',
    showAnyway: 'Show me anyway',
    compressedNFTDescription: 'Minted {{ count }} {{ symbol }}(s).',
    enrichedTransactionTypes: {
      UNKNOWN: 'App Interaction',
      NFT_BID: 'NFT Bid',
      NFT_BID_CANCELLED: 'NFT Bid Cancelled',
      NFT_LISTING: 'NFT Listing',
      NFT_CANCEL_LISTING: 'NFT Listing Canceled',
      NFT_SALE: 'NFT Sale',
      NFT_MINT: 'NFT Minted',
      NFT_AUCTION_CREATED: 'NFT Auction Created',
      NFT_AUCTION_UPDATED: 'NFT Auction Updated',
      NFT_AUCTION_CANCELLED: 'NFT Auction Cancelled',
      NFT_PARTICIPATION_REWARD: 'NFT Participation Reward',
      NFT_MINT_REJECTED: 'NFT Mint Rejected',
      CREATE_STORE: 'Store Created',
      WHITELIST_CREATOR: 'Whitelist Creator',
      ADD_TO_WHITELIST: 'Add to Whitelist',
      REMOVE_FROM_WHITELIST: 'Remove from Whitelist',
      AUCTION_MANAGER_CLAIM_BID: 'Auction Manager Claimed Bid',
      EMPTY_PAYMENT_ACCOUNT: 'Empty Payment Account',
      UPDATE_PRIMARY_SALE_METADATA: 'Primary Sale Metadata Updated',
      ADD_TOKEN_TO_VAULT: 'Token Added to Vault',
      ACTIVATE_VAULT: 'Vault Activated',
      INIT_VAULT: 'Vault Initialized',
      INIT_BANK: 'Initialized Bank',
      INIT_STAKE: 'Initialized Stake',
      MERGE_STAKE: 'Stake Merged',
      SPLIT_STAKE: 'Stake Split',
      SET_BANK_FLAGS: 'Set Bank Flags',
      SET_VAULT_LOCK: 'Set Vault Lock',
      UPDATE_VAULT_OWNER: 'Vault Owner Updated',
      UPDATE_BANK_MANAGER: 'Bank Manager Updated',
      RECORD_RARITY_POINTS: 'Record Rarity Points',
      ADD_RARITIES_TO_BANK: 'Add Rarities to Bank',
      INIT_FARM: 'Farm Initialized',
      INIT_FARMER: 'Farmer Initialized',
      REFRESH_FARMER: 'Farmer Refreshed',
      UPDATE_FARM: 'Farm Updated',
      AUTHORIZE_FUNDER: 'Funder Authorized',
      DEAUTHORIZE_FUNDER: 'Funder Deauthorized',
      FUND_REWARD: 'Reward Funded',
      CANCEL_REWARD: 'Reward Canceled',
      LOCK_REWARD: 'Reward Locked',
      PAYOUT: 'Payout',
      VALIDATE_SAFETY_DEPOSIT_BOX_V2: 'Validate Safety Deposit Box',
      SET_AUTHORITY: 'Set Authority',
      INIT_AUCTION_MANAGER_V2: 'Auction Manager Initialized',
      UPDATE_EXTERNAL_PRICE_ACCOUNT: 'External Price Account Updated',
      AUCTION_HOUSE_CREATE: 'Auction House Created',
      CLOSE_ESCROW_ACCOUNT: 'Escrow Account Closed',
      WITHDRAW: 'Withdraw',
      DEPOSIT: 'Deposit',
      TRANSFER: 'Transfer',
      BURN: 'Burn',
      BURN_NFT: 'Burn NFT',
      PLATFORM_FEE: 'Platform Fee',
      LOAN: 'Loan',
      REPAY_LOAN: 'Repay Loan',
      ADD_TO_POOL: 'Add to Pool',
      REMOVE_FROM_POOL: 'Remove from Pool',
      CLOSE_POSITION: 'Close Position',
      UNLABELED: 'Unlabeled',
      CLOSE_ACCOUNT: 'Close Account',
      WITHDRAW_GEM: 'Withdraw Gem',
      DEPOSIT_GEM: 'Deposit Gem',
      STAKE_TOKEN: 'Stake Token',
      UNSTAKE_TOKEN: 'Unstake Token',
      STAKE_SOL: 'Stake Sol',
      UNSTAKE_SOL: 'Unstake Sol',
      CLAIM_REWARDS: 'Rewards Claimed',
      BUY_SUBSCRIPTION: 'Subscription Bought',
      SWAP: 'Swap',
      INIT_SWAP: 'Swap Initialized',
      CANCEL_SWAP: 'Cancel Swap',
      REJECT_SWAP: 'Reject Swap',
      INITIALIZE_ACCOUNT: 'Initialize Account',
      TOKEN_MINT: 'Token Minted!',
      COMPRESSED_NFT_MINT: 'Compressed NFT Minted!',
    },
  },
  changeRewardsRecipientScreen: {
    title: 'Change Recipient',
    description: 'Update recipient of this Hotspot’s rewards',
    blurb: 'Rewards from this Hotspot will go to this recipient when claimed',
    warning:
      'This recipient will receive all rewards for this Hotspot. Make sure this is a trusted party',
    submit: 'Update Recipient',
    newRecipient: 'New Recipient',
    removeRecipient: 'Remove Recipient',
    set: 'Rewards Recipient Set',
  },
  assertLocationScreen: {
    title: 'Assert Location',
    whichLocation: 'Which location do you want to assert?',
    searchLocation: 'Search for a location...',
    antennaSetup: 'Antenna Setup (Optional)',
    antennaSetupDescription:
      'Submit gain and elevation details for your Hotspot',
    gainPlaceholder: 'TX / RX Gain (dBi)',
    elevationPlaceholder: 'Elevation (meters)',
    locationNotFound: 'Location not found, Please try again.',
    mobileTitle: 'MOBILE',
    success: {
      title: 'Succesfully Asserted Location!',
      message: 'The location was succesfully submitted to the blockchain',
    },
    error: {
      wrongOwner:
        'You do not own this hotspot, so you cannot assert its location',
      insufficientFunds:
        // eslint-disable-next-line no-template-curly-in-string
        'Assertion costs ${{usd}}. You do not have enough HNT or DC.',
    },
  },
  antennaSetupScreen: {
    title: 'Antenna Setup',
    antennaSetup: 'Antenna Setup',
    antennaSetupDescription:
      'Submit gain and elevation details for your Hotspot',
    gainPlaceholder: 'TX / RX Gain (dBi)',
    elevationPlaceholder: 'Elevation (meters)',
    submit: 'Update Antenna',
    settingUp: 'Setting up your antenna...',
    settingUpBody: 'Please wait while we update your Antenna!',
    settingUpError: 'Antenna Setup failed. Please try again later.',
    settingUpComplete: 'Antenna Setup!',
    settingUpCompleteBody:
      'The gain and elevation of your antenna have been updated.',
  },
  insufficientSolConversionModal: {
    title: 'Insufficient SOL',
    body: 'Please swap one of the following tokens to receive more SOL in order to continue. Tokens that you dont have any balance in will be disabled.',
    noBalance:
      'You currently dont hold a balance of any of the tokens supported by this swap.',
    useAuto:
      'Automatically manage solana transaction fees by swapping this token to SOL as needed',
  },
  swapsScreen: {
    priceImpact:
      'Price impact more than {{percent}}%. Try swapping a smaller amount.',
    title: 'Swap',
    subtitle: 'Swap your tokens for others',
    swapTokens: 'Swap Tokens',
    youPay: 'You Pay',
    youReceive: 'You Receive',
    chooseTokenToSwap: 'Choose a token to swap',
    chooseTokenToReceive: 'Choose a token to receive',
    slippage: 'Slippage',
    slippageLabelValue:
      '<b>Slippage</b> <secondaryText> {{ amount }}% </secondaryText>',
    slippageInfo:
      'Slippage is the difference between the expected price of an order and the price when the order actually executes. The slippage percentage shows how much the price for a specific asset has moved. Due to the volatility of cryptocurrency, the price of an asset can fluctuate often depending on trade volume and activity.\n\nYour trade will not execute if slippage moves unfavorably by more than this amount during execution.',
    minReceived:
      '<b>Minimum Received</b> <secondaryText> {{ amount }} </secondaryText>',
    swapComplete: 'Tokens swapped!',
    swapCompleteBody: 'The tokens in your wallet have been updated.',
    swappingTokens: 'Swapping your tokens...',
    swappingTokensBody:
      'You can exit this screen while you wait. We’ll update your Wallet momentarily.',
    swapError: 'Swap failed. Please try again later.',
    returnToSwaps: 'Return to Swaps',
    insufficientTokensToSwap:
      'You do not have sufficient tokens for this swap.',
    routeNotFound:
      'No route found on Jupiter from source token to target token. Please select another token.',
    swapAlertTitle: 'Are you sure you will like to swap your tokens?',
    swapAlertBody: 'This action is irreversible.',
    understood: 'Understood',
    treasurySwapWarningTitle: 'Treasury Swap Warning',
    treasurySwapWarningBody:
      'Please be advised that the subDAO treasury has only been active for a few days since the Solana migration. Swapping subtokens to HNT may be affected by a limited HNT supply in the subDAO treasury and may not reflect up-to-date prices. Please proceed with caution.',
    addRecipient: 'Add Recipient',
  },
  secretKeyWarningScreen: {
    title: 'Warning! Nobody should ask for your secret phrase or private key.',
    body: 'Would you give the username and password to your bank account? The answer is no. Nobody should have your secret phrase. Not even someone claiming to be a "Helium employee" or "Helium support."',
    youMayContinueInSeconds: 'You may continue in {{seconds}} seconds',
    goBack: 'Go Back',
    proceed: 'Proceed with caution',
  },
  defiTutorial: {
    title: 'Safety Tips',
    enterDApps: 'Enter Browser',
    slides: [
      {
        body: "Always double-check URLs to ensure you're on the correct website before entering any sensitive information.",
        title: 'Verify the URL',
      },
      {
        body: 'Be cautious of phishing attacks and only use trusted websites.',
        title: 'Use Trusted Websites',
      },
      {
        body: 'Ensure websites are trustworthy and have been audited for security.',
        title: 'Do Your Research',
      },
      {
        body: 'Never share your private keys or seed phrases with anyone.',
        title: 'Protect Your Information',
      },
    ],
  },
  browserScreen: {
    topPicks: 'Verified Websites',
    myFavorites: 'My Favorites',
    suspiciousActivity: 'Suspicious Activity: {{num}} transactions',
    instructionsAndPrograms: 'Instructions & Programs',
    estimatedAccountChanges: 'Estimated Account Changes',
    estimatedChangesDescription:
      'Outcomes may vary from the simulation. A malicious program can drain any writable accounts listed below. Simulations against the Solana Blockchain may be fooled by malicious actors. Only approve transactions from trusted sources.',
    accountDeleted: 'Account Closed',
    accountCreated: 'Account Created',
    accounts: 'accounts',
    transactions: '{{num}} transactions',
    writableAccounts: 'Writable Accounts',
    writableAccountsDescription:
      'Be cautious: This transaction can alter listed accounts, and outcomes may vary from the simulation. Malicious actors may drain writable accounts and fake simulations. Only approve transactions from trusted sources.',
    myFavoritesEmpty:
      'No favorites yet. Start browsing and add your favorite URLs!',
    recentlyVisited: 'Recently Visited',
    recentlyVisitedEmpty: 'No recently visited URLs yet. Start browsing!',
    connectBullet1: 'View your wallet balance & activity',
    connectBullet2: 'Request Approval for transactions',
    connectToWebsitesYouTrust: 'Only connect to websites you trust',
    estimatedChanges: 'Estimated Changes',
    sendToken: 'Send {{amount}} {{ticker}}',
    receiveToken: 'Receive {{amount}} {{ticker}}',
    insufficientFunds: 'Insufficient funds',
    insufficientRentExempt:
      'Solana wallets must have a minimum of ~{{amount}} SOL to cover rent. The result of this transaction would leave your wallet with less than the rent-exempt minimum.',
    unableToSimulate:
      'Unable to simulate. Make sure you trust this app since approving can lead to loss of funds.',
    networkFee: 'Network Fee',
    totalPriorityFee: 'Total Priority Fee',
    totalNetworkFee: 'Total Network Fee',
    totalBaseFee: 'Total Base Fee',
    priorityFeeDescription:
      'When the network is congested, priority fees help your transaction get included in the block. The app has automatically adjusted the priority fee to make it more likely your transaction lands.',
    connect: 'Connect',
    approve: 'Approve',
    swipeToApprove: 'Swipe To Approve',
    cancel: 'Cancel',
    insufficientSolToPayForFees: 'Insufficient SOL to pay for fees',
    wouldYouLikeToConvert:
      'Would you like to convert ~{{amount}} {{ticker}} to ~0.02 SOL for tx fees?',
    slippageToleranceExceeded:
      'Slippage tolerance exceeded. Please increase slippage',
  },
  accountTokenList: {
    tokens: 'Tokens',
    manage: 'Manage Visible Tokens',
  },
  accountView: {
    balance: 'Balance',
    fiveG: '5G',
    genesis: 'In Genesis',
    lock: 'Lock',
    nonTransferable: 'Non-Transferable',
    payment: 'Payment',
    deposit: 'Deposit',
    swaps: 'Swap',
    Redeem: 'Security Tokens',
    send: 'Send',
    stake: 'Stake',
    testnetTokens: 'Testnet Tokens',
    delegate: 'Delegate',
    airdrop: 'Airdrop',
  },
  addNewAccount: {
    title: 'Add New Wallet',
  },
  addNewContact: {
    addContact: 'Add Contact',
    address: {
      placeholder: 'e.g. 9h9h9r3hfi04nf0j083...',
      title: 'Enter {{network}} Address',
    },
    loadFailed: 'Cannot validate address. Please try again.',
    nickname: {
      placeholder: 'e.g. Loki Laufeyson',
      title: 'Enter Nickname',
    },
    title: 'Add New Contact',
  },
  addressBook: {
    addNext: 'Add New...',
    qrScanFail: {
      message: 'This QR scanner supports Solana wallet addresses only.',
      title: 'Unsupported QR Code',
    },
    searchContacts: 'Search Contacts...',
    title: 'Address Book',
  },
  auth: {
    enterCurrent: 'Enter your current PIN to continue',
    error: 'Incorrect PIN',
    signOut: 'Remove Wallet',
    signOutAlert: {
      body: 'You are removing all of your wallets. Do you have your recovery words? If you don’t, you will lose access to:\n\n- your Address Book\n- your HNT\n- your Wallet',
      title: 'Warning! Remove all wallets?',
    },
    title: 'Enter Your PIN',
  },
  burn: {
    amount: 'Amount (HNT)',
    equivalent: 'Equivalent to (DC)',
    ledger: {
      subtitle:
        'Please verify the burn transaction on your Ledger device {{name}}',
      title: 'Ledger Approval',
    },
    memo: 'Memo',
    noAcct: {
      message: 'No wallet for this network found',
      title: 'Wallet not found',
    },
    recipient: 'Recipient Address',
    swipeToBurn: 'Swipe to Burn',
    title: 'Burn',
    subdao: '{{subdao}} Subnetwork',
    choooseSubDAO: 'Choose a Subnetwork',
  },
  delegate: {
    title: 'Delegate',
    swipe: 'Swipe to Delegate',
    amount: 'Amount (DC)',
  },
  connectedWallets: {
    add: 'Import or Create Wallet',
    addSub: 'Add Sub Wallet',
    addTestnet: 'Add New Testnet Wallet',
  },
  dappLogin: {
    account: {
      subtitle: 'Which wallet do you want to authenticate with {{appName}}?',
      title: 'Choose your\nWallet',
    },
    connect: {
      continue: 'Continue',
      subtitle: 'Authenticate {{appName}}\nwith your Helium Wallet?',
      title: 'Connect to {{appName}}?',
    },
    error: 'Failed to verify {{appName}}',
    ledger: {
      subtitle:
        'You must sign burn transaction to login to {{appName}}. Please verify the burn transaction on your Ledger device {{deviceName}}',
      title: 'Ledger Approval',
    },
    login: 'Login',
    timeoutAlert: {
      title: 'Login Failed',
      message:
        'Please close and reopen the login screen and scan a new QR code to try again.',
    },
  },
  editContact: {
    delete: 'Delete',
    deleteConfirmMessage:
      'Are you sure you want to delete your contact, {{alias}}?',
    deleteConfirmTitle: 'Delete Contact?',
    save: 'Save',
    title: 'Edit Contact',
  },
  finePrint: {
    body: 'By continuing, you agree to the',
  },
  generic: {
    dBi: 'dBi',
    gain: 'Gain',
    maker: 'Maker',
    elevation: 'Elevation',
    radioType: 'Radio Type',
    coverage: 'Coverage',
    airdrop: 'Airdrop',
    account: 'Wallet',
    and: 'and',
    back: 'Back',
    cancel: 'Cancel',
    save: 'Save',
    swap: 'Swap',
    clear: 'Clear',
    of: 'of',
    confirm: 'Confirm',
    copied: 'Copied {{target}}',
    copiedSeedPhrase: 'Copied Seed Phrase',
    copy: 'Copy',
    copyToClipboard: 'Copy to clipboard',
    toClipboard: 'to clipboard',
    done: 'Done',
    error: 'Error',
    fee: 'Fee',
    loadFailed: 'Cannot validate address. Please try again.',
    loadMore: 'Load More',
    loading: 'Loading',
    calculatingTransactionFee: 'Calculating Transaction Fee...',
    mainnet: 'Mainnet',
    next: 'Next',
    none: 'None',
    unknown: 'Unknown',
    solanaAddress: 'Solana Address',
    notValidAddress: 'Not a valid Wallet Address.',
    notValidSolanaAddress: 'Not a valid Solana Address.',
    insufficientBalance: 'Insufficient balance',
    ok: 'OK',
    period: '.',
    password: 'Password',
    retry: 'Retry',
    remove: 'Remove',
    share: 'Share',
    skip: 'Skip',
    swappingSol: 'Auto swapping {{ amount }} {{ symbol }} to 0.02 SOL',
    success: 'Success',
    testnet: 'Testnet',
    total: 'Total',
    tryAgain: 'Try Again',
    somethingWentWrong: 'Something went wrong, please try again',
    submitSuccess: 'Transaction Submit',
    understand: 'I Understand',
    noData: 'No Data',
    devnetTokensWarning: 'Warning! These are devnet tokens for testing only.',
    solanaHealthy: 'Solana RPC is healthy.',
    solanaHealthDown: 'Solana RPC is down. Please try again later.',
    solanaTpsSlow: 'Solana RPC is slow. {{ tps }} tps.',
    sendLogs: 'Send Logs',
    update: 'Update',
    or: 'Or',
  },
  crash: {
    title: 'App Crashed',
    subTitle: 'Please report this issue in the Helium Discord.',
    resetApp: 'Clear Cache and Reset App',
  },
  hntKeyboard: {
    enterAmount: 'Enter {{ticker}} Amount',
    fee: '+{{value}} Fee',
    hntAvailable: '{{amount}} Available',
    validFor: 'valid for {{time}}',
  },
  intro: {
    subtitle: 'Setup should only take\na few minutes.',
    tap: 'Get Started',
    title: 'Welcome to\nHelium Wallet',
  },
  keystone: {
    connectKeystoneStart: {
      subtitle:
        'Click on the "Connect with Keystone" button below to scan the QR code displayed on the Keystone device.',
      title: 'Connect Keystone to Wallet',
      scanQrCode: 'Scan QR Code',
      warning: 'Please enable your camera permission via [Settings]',
      ok: 'OK',
      unexpectedQrCodeContent:
        'The QR code you scanned is not valid. Please try again.',
      unexpectedQrCodeTitle: 'Unexpected QR Code',
    },
    selectKeystoneAccounts: {
      subtitle:
        'A secret phrase can be used to generate multiple wallets by using derivation paths. The following derivation paths have been automatically detected. Select the wallets you would like to import.',
      title: 'Select Keystone Accounts',
    },
    scanQrCode: 'Scan the QR Code',
    payment: {
      scanTxQrcodeScreenTitle: 'Scan the QR Code',
      scanTxQrcodeScreenSubtitle1: 'Scan the QR code via your Keystone device',
      scanTxQrcodeScreenSubtitle2:
        "Click on the 'Get Signature' button after signing the transaction with your Keystone device.",
      scanTxQrcodeScreenSubtitle3:
        'Place the QR code from your Keystone device in front of the camera.',
      getSignature: 'Get Signature',
    },
  },
  ledger: {
    openTheSolanaApp: 'Open the Solana app on your {{ device }}',
    pleaseConfirmTransaction: 'Please confirm transaction on your {{ device }}',
    pleaseEnterPinCode: 'Please enter pin code on your {{ device }}',
    enableBlindSign:
      'Please enable blind signing in the ledger solana app settings. This error can also occur if your ledger firmware is out of date.',
    chooseType: {
      bluetooth: {
        title: 'Bluetooth',
        types: 'Nano X',
      },
      title: 'How is your device connected?',
      usb: {
        title: 'USB Cable',
        types: 'Nano S, Nano S Plus, Nano X',
      },
    },
    connectError: {
      steps: [
        'Check network connection',
        'Check Bluetooth is enabled',
        'Open your Ledger device.',
      ],
      subtitle:
        'Please check that your Ledger\nDevice is connected to this phone.\n\nIf not, follow these steps:',
      title: 'Pairing Failed',
    },
    deviceNotFound: {
      message:
        'Could not find your ledger device. Please make sure it is connected and the Helium app is open.',
      title: 'Device Not Found',
    },
    pairStart: {
      pair: 'Pair with Ledger',
      subtitle:
        'Tap the button below to\nsearch for nearby Ledger\nWallets to link with.',
      title: 'Pair Ledger\nto Wallet',
    },
    payment: {
      subtitle:
        'Please verify the payment transaction on your Ledger device {{name}}',
      title: 'Ledger Approval',
    },
    scan: {
      connectionError: 'Ledger Connection Error',
      permissionDialog: {
        later: 'Ask Me Later',
        message:
          'Location permission is needed to enable a bluetooth connection',
        title: 'Location Permission',
      },
      subtitle:
        'Please make sure your\nLedger is unlocked with\nbluetooth enabled',
      subtitleUsb:
        'Please make sure your\nLedger is unlocked and\nconnected via USB',
      title: 'Looking\nfor Devices',
    },
    show: {
      accountsAlreadyLinked: 'Wallets Already Linked ({{count}})',
      addNewAccount: 'Add New Wallet',
      alias: 'Ledger Wallet {{accountIndex}}',
      close: 'Close',
      deselectAll: 'Deselect All',
      emptyAccount:
        "Can't add a new wallet before you've received assets on your {{account}}",
      help: 'Verify that the address shown on the Ledger device matches.',
      next: 'Import Wallet(s)',
      selectAll: 'Select All',
      subtitle:
        'This Ledger device can authorize transactions for the below Helium Account. ',
      title: 'Select Wallets',
    },
    start: {
      help: 'How does it work?',
      next: 'Pair with Ledger',
      subtitle:
        'Please make sure your Ledger is unlocked with Bluetooth enabled',
      title: 'Pair with Ledger',
    },
    success: {
      next: 'View Wallet',
      subtitle: 'Your Ledger wallet is now available in your Helium Wallet.',
      title: 'Ledger Paired Successfully',
    },
  },
  linkWallet: {
    body: 'By Linking Helium Wallet to {{appName}}, you can safely sign blockchain transactions without re-entering your seed phrase.',
    no: 'No, Cancel',
    noWallet: {
      message: 'Please create a wallet and try again.',
      title: 'Wallets not found',
    },
    title: 'Link Helium Wallet\nto {{appName}}?',
    yes: 'Yes, Link my Wallet',
  },
  notifications: {
    accountUpdates: '{{title}} Updates',
    emptyTitle: 'No Notifications',
    heliumUpdates: 'Helium Updates',
    title: 'My Notifications',
    walletUpdates: 'Wallet Updates',
  },
  onboarding: {
    create: 'New',
    import: 'Import',
    ledger: 'Ledger',
    keystone: 'Keystone',
  },
  ordinals: [
    '1st',
    '2nd',
    '3rd',
    '4th',
    '5th',
    '6th',
    '7th',
    '8th',
    '9th',
    '10th',
    '11th',
    '12th',
    '13th',
    '14th',
    '15th',
    '16th',
    '17th',
    '18th',
    '19th',
    '20th',
    '21st',
    '22nd',
    '23rd',
    '24th',
  ],
  payment: {
    addRecipient: '+ Add Recipient',
    backToAccounts: 'Back to Wallets',
    enterAddress: 'Enter Address',
    enterAmount: 'Enter Amount',
    enterMemo: 'Enter Memo (Optional)',
    fee: '+{{value}} Fee',
    insufficientFunds: 'Insufficient {{token}}',
    ledgerTooManyRecipients:
      'Ledger payment transactions\nare limited to 1 recipient.',
    max: 'Max',
    memoBytes: '{{used}}/{{total}} Bytes',
    mobilePrompt: {
      message:
        "Sending MOBILE has a small transaction fee that's paid from your HNT balance. If you have a 0 HNT balance, the payment will not succeed.",
      title: 'MOBILE Payment',
    },
    netTypeQrError: "No wallets support the scanned address's network type.",
    pay: 'Pay',
    qrScanFail: {
      message:
        'This QR scanner supports payment transactions and wallet addresses.',
      title: 'Unsupported QR Code',
    },
    selectContact: 'Select Contact',
    selfPay: 'Self Pay',
    send: 'Send',
    sendTokensToAnyAddress: 'Send tokens to any address on the Solana Network.',
    sendButton: 'Swipe to Send {{ticker}}',
    senderAccount: 'Sender Wallet',
    sending: 'Sending...',
    solana: {
      warning: {
        title: 'Solana {{cluster}} Payment',
        message: 'You are sending a payment on Solana {{cluster}}.',
      },
    },
    submitError:
      'There was an error submitting this transaction. Please try again.\n\n{{details}}',
    submitFailed: 'Transaction\nFailed',
    submitSuccess: 'Transaction\nSubmitted',
    title: 'Send {{ticker}}',
    total: 'Total',
    to: 'To',
    totalRecipients: '{{count}} Recipient',
    totalRecipients_one: '{{count}} Recipient',
    totalRecipients_other: '{{count}} Recipients',
    totalRecipients_plural: '{{count}} Recipients',
    wrongNetType: 'Wrong Net Type',
    programOwnedWarning:
      'This is a smart-contract owned account. Are you sure this is the correct address?',
  },
  placeholder: {
    accountBalanceValue: 'Wallet Balance: {{balance}}',
    enterAccountAddress: 'Enter Wallet Address',
    fetchMoreActivity: 'Fetch More Activity',
    getAccountData: 'Get Wallet Data',
  },
  qrScanner: {
    deniedAlert: {
      message:
        'Camera permissions denied. To re-enable, go to your phone’s settings.',
      ok: 'Go to Settings',
      title: 'Camera Disabled',
    },
  },
  request: {
    amount: 'Amount (Optional)',
    copied: 'Link has been copied to your clipboard',
    enterAmount: 'Enter {{ticker}} Amount',
    link: 'Deeplink',
    memo: 'Memo',
    payee: 'Payee',
    qr: 'QR',
    requestType: 'Request {{ticker}}',
    title: 'Generate Request',
  },
  restoreAccount: {
    alert: {
      button12: '12 Words',
      button24: '24 Words',
      message: 'Does your wallet {{address}} have 12 or 24 security words?',
      title: 'Restore Wallet',
    },
    errorAlert: {
      message:
        'The words you entered do not match the wallet you are restoring.',
      title: 'Error Restoring Wallet',
    },
    missing: 'Wallet has no private key. Tap to restore.',
    missingAlert: {
      button1: 'Restore wallet with 12-24 Words',
      message:
        'Your private key for wallet {{address}} is missing and must be restored.',
      title: 'Private Key Not Found',
    },
  },
  settings: {
    system: 'System',
    light: 'Light',
    dark: 'Dark',
    confirmSignout: {
      forgotAlert: {
        body: 'Would you like to reveal your wallets words?',
        title: 'Reveal Words',
      },
      title: 'Confirm Your\nWords To Remove Wallet Data.',
    },
    revealPrivateKey: {
      alertMessage:
        "This will access and display your private key from your device's secure storage",
      alertTitle: 'Are you sure?',
      done: 'Done',
      subtitle:
        '<secondaryText>Do not share your private key!</secondaryText><error.500>\n\nIf someone has your private key they will have full control of your wallet! Do not enter this into any websites. Any individual asking for this key is likely a scammer.</error.500>',
      tap: 'Tap to reveal your private key',
      title: 'Your Private Key',
    },
    revealWords: {
      next: 'I have written these down',
      subtitle:
        '<secondaryText>Never give these words to anyone, or enter them into any website. <error.500>Any person or website asking for these words is likely a scammer</error.500>. It is crucial you write all of these\n{{numWords}} words down, in order, and keep them safe.</secondaryText><error.500>\n\nHelium cannot recover these words.</error.500>',
      title: 'Your {{numWords}} Word Password',
      warning: 'Helium cannot recover these words',
    },
    autoGasManagement: {
      title: 'Automatic Fee Management',
      body: 'Allow helium wallet to automatically manage your SOL balance by swapping the selected token into SOL as needed.',
      enabled: 'Enable Auto Fee Management',
      selectTokenBody: 'Which token should be swapped to SOL?',
    },
    sections: {
      account: {
        alias: 'Wallet Alias',
        copyAddress: 'Copy Address',
        revealWords: 'Reveal Words',
        shareAddress: 'Share Address',
        signOut: 'Remove Wallet',
        signOutAlert: {
          body: 'You are removing your wallet, {{alias}}. Do you have your recovery words? If you don’t, you will lose access to:\n\n- your HNT\n- your Wallet',
          bodyLastAccount:
            'You are removing your only wallet, {{alias}}. Do you have your recovery words? If you don’t, you will lose access to:\n\n- your Address Book\n- your HNT\n- your Wallet',
          iCloudMessage:
            '\n\nAny device using the same iCloud account will also be signed out.',
          title: 'Remove {{alias}}?',
        },
        title: '{{alias}} Wallet Settings',
        migrateWallet: 'Migrate Wallet',
      },
      app: {
        convertHntToCurrency: 'Convert HNT to Currency',
        currency: 'Currency',
        language: 'Language',
        title: 'App Settings',
        version: 'App Version',
        explorer: 'Preferred Hotspot Explorer',
        enableHaptic: 'Enable Haptic Feedback',
        autoGasManager: 'Automatic Fee Management',
      },
      backup: {
        revealPrivateKey: 'Reveal Private Key',
        revealWords: 'Reveal Words',
        title: '{{alias}} Wallet Backup',
      },
      defaultAccount: {
        disableMessage:
          'Wallet app requires a default wallet. Select a different account by tapping its account settings to set as default.',
        disableTitle: 'Default Wallet Required',
        enableMessage:
          'This will update your default wallet from {{aliasOld}} to {{aliasNew}}. You can update this in Settings later if you change your mind.',
        enableTitle: 'Update Default Wallet?',
        title: 'Default Wallet',
      },
      dev: {
        solana: {
          helperText: 'More Info',
          prompt: {
            message:
              'By enabling preview, you will see your equivalent Helium address on Solana.\n\nAll token balances are test tokens on Solana represented as tHNT, tMOBILE, etc.\n\nSolana balances are a snapshot of your Helium balance and may be reset or updated at any time.\n\nYou can interact with test tokens but they should not be traded.',
            title: 'Solana Preview',
          },
          title: 'Preview Solana Experience',
        },
        clearCache: 'Clear Cache',
        clearCacheMessage:
          'Are you sure you want to clear the cache? This will remove all cached data from the app.',
        solanaCluster: { title: 'Solana Cluster' },
        testnet: {
          enablePrompt: {
            getTnt: 'Get TNT',
            message:
              'Importing and Creating Testnet wallets enabled. To acquire TNT (Testnet tokens), go to faucet.helium.wtf.',
            title: 'Enable Testnet Access',
          },
          helperText: 'To disable Testnet, signout of of\nall Testnet accounts',
          title: 'Enable Testnet',
        },
        title: 'Developer Settings',
      },
      finePrint: {
        privacyPolicy: 'Privacy Policy',
        termsOfService: 'Terms of Service',
        title: 'The Fine Print',
      },
      security: {
        authIntervals: {
          after_1_hr: 'After 1 hour',
          after_1_min: 'After 1 minute',
          after_4_hr: 'After 4 hours',
          after_5_min: 'After 5 minutes',
          after_15_min: 'After 15 minutes',
          immediately: 'Immediately',
        },
        enablePin: 'Enable PIN',
        requirePin: 'Require PIN',
        requirePinForPayments: 'Require PIN for Payments',
        resetPin: 'Reset PIN',
        title: 'Security Settings',
      },
      shareAddress: {
        copiedToClipboard: 'Copied {{address}} to clipboard',
      },
    },
    title: 'Settings',
  },
  signHotspot: {
    burnAmounts: 'Amount To Be Burned',
    direction: 'Direction',
    error: {
      subtitle:
        'Unable to add this Hotspot to the Helium Network. Contact {{maker}} to troubleshoot this issue.',
      takeMeBack: 'Go Back to {{maker}}',
      title: 'Invalid Link',
    },
    gain: 'Gain:',
    location: 'Location:',
    name: 'Hotspot Name:',
    newOwner: 'New Owner:',
    owner: 'Owner:',
    title: 'Onboard {{networks}}\nHotspot?',
    titleConfig: 'Update Hotspot Configuration?',
    titleLocationOnly: 'Update Location?',
    titleTransfer: 'Transfer Hotspot?',
  },
  statusBanner: {
    description: 'Last updated {{date}}. Tap for info.',
  },
  transactions: {
    updateRecipient: 'Update Recipient',
    added: 'Hotspot Added to Blockchain',
    addToAddressBook: {
      message: 'Would you like to add this wallet to your address book?',
      title: 'Add to Address Book',
    },
    amount: 'Amount',
    amountToPayee: 'Amount to Payee {{index}}',
    amountToSeller: 'Amount to Seller',
    block: 'Block',
    burnHNT: 'Burn {{ticker}}',
    buyer: 'Buyer',
    date: 'Date',
    feePaidBy: 'Fee paid by {{feePayer}}',
    from: 'From',
    hash: 'Hash',
    hotspot: 'Hotspot',
    iotRewards: 'IOT Rewards',
    location: 'Confirm Location',
    location_v2: 'Update Location',
    memo: 'Memo',
    mining: 'Mining Rewards',
    buyDc: 'Buy DC',
    mobileRewards: 'Mobile Rewards',
    newAddress: 'New Address',
    newOwner: 'New Owner',
    oldAddress: 'Old Address',
    oldOwner: 'Old Owner',
    owner: 'Owner {{index}}',
    pending: {
      inProcess: 'In Process',
      pending: 'Pending',
      sending: 'Payment Sending...',
    },
    received: 'Received {{ticker}}',
    rewardTypes: {
      consensus: 'Consensus',
      data_credits: 'Packet Transfer',
      overages: 'Overages',
      poc_challengees: 'PoC',
      poc_challengers: 'Challenger',
      poc_witnesses: 'Witness',
      securities: 'Security Tokens',
    },
    seller: 'Seller',
    sent: 'Sent {{ticker}}',
    stake: 'Stake',
    stakeAmount: 'Stake Amount',
    stakeValidator: 'Stake {{ticker}}',
    stakingFee: 'Staking Fee',
    tokens: 'Tokens',
    totalAmount: 'Total Amount',
    transaction: 'Transaction',
    transfer: 'Hotspot Transfer',
    transferBuy: 'Transfer Hotspot (Buy)',
    transferSell: 'Transfer Hotspot (Sell)',
    delegateDC: 'Delegate data credits',
    transferValidator: 'Transfer Stake',
    txnFee: 'Transaction Fee',
    txnFeePaidBy: 'Transaction Fee paid by {{feePayer}}',
    unstakeValidator: 'Unstake {{ticker}}',
    validator: 'Validator',
    delegated: 'Delegated',
    claimRewards: 'Claim Rewards',
    sendTokens: 'Send Tokens',
    transferCollectable: 'Transfer Collectable',
    signPaymentTxn: 'Sign this transaction to send your payment.',
    simulateTxn: 'Simulate Transaction',
    signTxn: 'Sign Transaction',
    signTransferCollectableTxn:
      'Sign this transaction to transfer your collectable.',
    signSwapTxn: 'Sign this transaction to swap your tokens.',
    signGenericTxn: 'Sign this transaction to send your txn.',
    signClaimRewardsTxn: 'Sign this transaction to claim your rewards.',
    signClaimAllRewardsTxn: 'Sign this transaction to claim all your rewards.',
    signMintDataCreditsTxn: 'Sign this transaction to mint your data credits.',
    signDelegateDCTxn: 'Sign this transaction to delegate your data credits.',
    signAssertLocationTxn: 'Sign this transaction to assert the location.',
    recipientNonExistent:
      'Recipient Account is empty, Double check the address before signing.',
    autoGasConvert:
      'Sign this transaction to convert {{ symbol }} into 0.02 SOL for transaction fees.',
    autoGasConvertHeader: 'Auto Fee Conversion: Low on SOL',
  },
  gov: {
    title: 'Governance',
    tutorial: {
      goToVote: 'Go To Vote',
      slides: [
        {
          body: 'Helium Vote is where the\nHelium Community comes\ntogether to make decisions\non the Network.',
          title: 'Helium Vote',
        },
        {
          body: 'Each Vote is driven by a\nHelium Improvement\nProposal (HIP).',
          title: 'HIPs',
        },
        {
          body: 'Each HIP will have multiple\nvoting choices. After reading the HIP.\nVote for choices you align with.\n\nVote transactions have a\nsmall fee.',
          title: 'How to Vote',
        },
        {
          body: 'Your <primaryText>Vote Power</primaryText>\nis determined by the amount of\nHNT, MOBILE, IOT that you have\nlocked up in the account.\n\nLocked HNT can be delegated\nto SubNetworks for rewards.',
          title: 'Vote Power',
        },
        {
          body: '<green.400>Get your voice heard.</green.400>\n\nVote on Active Votes\nManage your locked positions\nOr browse past HIPs.',
          title: 'Ready to Vote?',
        },
      ],
    },
    claiming: {
      title: 'Claiming Rewards',
      body: 'Please wait while we claim all\nthe rewards from your positions',
      multiple:
        'You may be asked to approve multiple times\nif you havent claimed rewards for awhile',
    },
    votingPower: {
      title: 'Voting Power',
      yourPower: 'Your Voting Power',
      noPower: 'You have no voting power in this dao',
      locked: '{{symbol}} Locked',
      youHave: 'You have {{amount}} more {{symbol}} available to lock.',
      increase: 'Increase your voting power by locking tokens.',
      lockYourTokens: 'Lock {{amount}} {{symbol}} for {{duration}}?',
    },
    voters: {
      title: 'Browse Voters',
      searchPlaceholder: "Search for voter's name or public key",
      warning:
        'Assigning proxy to majority voters may threaten the decentralization of the network.',
      majority: 'Majority Voter',
      minority: 'Minority Voter',
      assignBelow: 'Consider assigning proxy to voters below this point.',
      noneFound: 'No voters found matching this search',
    },
    assignProxy: {
      title: 'Assign Proxy',
      browseVoters: 'Browse Voters',
      description:
        "Select the voter to assign as your position's proxy. Once assigned, they can cast a vote on your behalf and/or assign it to others.",
      searchPlaceholder: 'Select Proxy or Paste Wallet Address',
      selectNetwork: 'Select Network',
      assignPositions: 'Assign Positions',
      selectAll: 'Select All',
      deSelectAll: 'Deselect All',
      expiryDate: 'Expiry Date',
      days: 'days',
    },
    revokeProxy: {
      title: 'Revoke Proxy',
      description:
        'Select the voter to revoke as your position’s proxy. Once revoked, they can no longer cast a vote on your behalf and/or assign it to others.',
      revokePositions: 'Revoke Positions',
    },
    history: {
      noneFound: 'No proposals found',
      cancelled: 'Cancelled',
      active: 'Active',
      notVoted: 'Not Voted',
      estTimeRemaining: 'Estimated Time Remaining',
      percentOfVote: 'Percent of Vote',
      voted: 'Voted',
      completed: 'Completed',
      result: 'Result',
    },
    voter: {
      assignProxy: 'Assign Proxy',
      revokeProxy: 'Revoke Proxy',
    },
    positions: {
      delegatedTo: 'Delegated To',
      proxiedTo: 'Proxied To',
      relinquish: 'Relinquish Votes',
      lockedAmount: 'Locked Amount {{amount}} {{symbol}}',
      constant: 'Constant',
      decaying: 'Decaying',
      delegate: 'Delegate position',
      undelegate: 'Undelegate position',
      extend: 'Extend position',
      close: 'Close position',
      split: 'Split position',
      transfer: 'Transfer between positions',
      unpause: 'Unlock to start decaying',
      pause: 'Pause to stop decaying',
      unableToClose: 'Unable to close',
      unableToSplit: 'Unable to split',
      unableToTransfer: 'Unable to transfer',
      unableToPauseLockup: 'Unable to pause unlock',
      unableToUnpauseLockup: 'Unable to start unlock',
      partakingInVote: 'Position is partaking in an active vote!',
      splitting: 'Splitting...',
      extending: 'Extending...',
      transfering: 'Transfering...',
      closing: 'Closing...',
      unlocking: 'Unlocking...',
      pausing: 'Pausing...',
      delegating: 'Delegating...',
      undelegating: 'Undelegating...',
      relinquishing: 'Relinquishing...',
      landrush: 'Landrush',
      lockupType: 'Lockup Type',
      amountToLock: 'Amount to lock',
      amountToTransfer: 'Amount to transfer',
      voteMult: 'Vote Multiplier',
      duration: 'Duration',
      customDuration: 'Custom Duration',
      customDurationPlaceholder: 'Custom Duration (days)',
      minDur: 'Min Duration',
      timeLeft: 'Time Left',
      actionsTitle: 'Manage Position',
      longerLockup:
        'Select a new lockup period longer than or equal to the existing {{existing}}',
      delegateBlurb:
        "Delegating to a subnetwork may earn you rewards in that subnetwork's token.",
      splitWarning:
        'Splitting a Landrush position after the Landrush period will result in the split tokens losing the multiplier!',
      initialVotePowerMult: 'Initial Vote Power Multiplier',
      transferBlurb: 'Move tokens from this position to another.',
      transferWarning:
        'You can only transfer to positions that have a greater than or equal lockup time.',
      transferLandrushWarning:
        'Transfering out of a Landrush position, will result in losing the multiplier!',
      cantTransfer: 'There are no positions that meet this criteria.',
      selectTransfer: 'Select position to transfer too.',
      selectSubDao: 'Select an existing SubNetwork to delegate to.',
      fetchingSubDaos: 'Fetching SubDaos...',
      noneFound: 'No Positions Found',
      closeMessage: 'Close this position?',
      flipLockupMessage:
        "Your current position of {{amount}} {{symbol}} is {{status}}, please confirm whether you'd like to {{action}} or not?",
      extendMessage:
        'Extend this positions lockup from {{existing}} to {{new}}?',
      splitMessage:
        'Split {{amount}} {{symbol}} into a new position with {{lockupKind}} lockup of {{duration}}?',
      transferMessage:
        'Transfer {{amount}} {{symbol}} to the position with {{targetAmount}} {{symbol}}?',
      delegateMessage:
        'delegate {{amount}} {{symbol}} to the {{subdao}} Subnetwork?',
      undelegateMessage: 'Undelegate {{amount}} {{symbol}}?',
      relinquishVotesMessage: 'Relinquish this positions votes?',
    },
    proposals: {
      overviewTitle: 'Proposal Overview',
      filterTitle: 'Filter Proposals',
      filter: 'Proposals: {{filter}}',
      noDesc: 'No description for this proposal',
      estTime: 'Est. Time Remaining',
      votingClosed: 'Voting Closed',
      success: 'Success',
      completed: 'Completed',
      failed: 'Failed',
      cancelled: 'Cancelled',
      votes: 'Votes',
      castVoteFor: 'Cast your vote for {{choice}}?',
      relinquishVoteFor: 'Relinquish your vote for {{choice}}?',
      toVote:
        'To vote, click on any option. To remove your vote, click the option again. Vote for up to {{maxChoicesPerVoter}} of {{choicesLength}} options.',
      assignProxy:
        "Assign proxy to a trusted voter if you don't want to vote. You can override any active votes anytime - your vote takes precedence over a proxy.",
    },
    transactions: {
      assignProxy: 'Assign Proxy',
      revokeProxy: 'Revoke Proxy',
      castVote: 'Cast Vote',
      relinquishVote: 'Relinquish Vote',
      lockTokens: 'Lock Tokens',
      claimRewards: 'Claim Rewards',
      closePosition: 'Close Position',
      pauseLockup: 'Pause Unlock',
      unpauseLockup: 'Start Unlock',
      extendPosition: 'Extend Position',
      splitPosition: 'Split Position',
      transferPosition: 'Transfer Tokens',
      delegatePosition: 'Delegate Position',
      undelegatePosition: 'Undelegate Tokens',
      relinquishPosition: 'Relinquish Votes',
    },
    errors: {
      lockTokens:
        'Lock or delegation failed. Please check your positions as the lock may have been successful.',
      claimRewards: 'Claim failed, please try again.',
      extendLockup: 'Extend failed, please try again.',
      splitTokens: 'Split failed, please try again.',
      pauseLockup: 'Pause failed, please try again.',
      unpauseLockup: 'Unlock failed, please try again.',
      transferPosition: 'Transfer failed, please try again.',
      closePosition: 'Close failed, please try again.',
      delegatePosition: 'Delegate failed, please try again.',
      undelegatePosition: 'Undelegate failed, please try again.',
      markdown: 'Failed to retrive proposal markdown.',
      castVote: 'Vote failed, please try again.',
      relinquishVote: 'Relinquish vote failed, please try again.',
      relinquishVotes: 'Relinquish votes failed, please try again.',
    },
  },
  sideDrawer: {
    routes: [
      {
        title: 'Wallet',
        value: 'wallet',
      },
      {
        title: 'Governance',
        value: 'governance',
      },
      {
        title: 'Hotspots',
        value: 'hotspots',
      },
      {
        title: 'Browser',
        value: 'browser',
      },
      {
        title: 'Notifications',
        value: 'notifications',
      },
      {
        title: 'Settings',
        value: 'settings',
      },
    ],
  },
  walletAlertBanner: {
    insufficentSol:
      'Insufficient SOL to pay for fees. Please add more SOL to your wallet.',
    tokenPrice:
      'We are currently experiencing issues fetching token prices. Please try again later.',
  },
  accountsService: {
    title: 'Your Wallets',
    switchingAccounts: 'Switching accounts',
    addingSubAccount: 'Adding Sub Account',
    pleaseBePatient: 'Please be patient. This may take a moment.',
  },
  receivePage: {
    title: 'Receive',
    subtitle: 'Share your QR or address to request tokens.',
    shareQr: 'Share QR',
    copyAddress: 'Copy Address',
  },
  tokenSelector: {
    title: 'Select a currency',
  },
  addressBookSelector: {
    title: 'Select a contact',
  },
  blurActionSheet: {
    selectAnOption: 'Select an option',
  },
  manageCollectables: {
    title: 'Manage collectable list',
  },
  HotspotPage: {
    metersAway: '{{meters}}m away',
    amountOfHotspots: '{{amount}} Hotspots',
    byDistance: 'By Distance',
    byEarnings: 'By Earnings',
    noHotspotsTitle: 'No Hotspots. Yet',
    noHotspotsSubtitle:
      'Hotspots create wireless coverage for millions of devices.',
    learnMore: 'Learn More',
    add: 'Add',
    filter: 'Filter Hotspots',
    new: 'NEW',
    nearby: 'Nearby',
    distanceNotAvailable: 'Distance not available',
  },
  AddHotspotPage: {
    title: 'Let’s get your Hotspot connected!',
    subtitle: 'Got a good spot for your Hotspot?',
    locationAndMountingTips: 'Location & Mounting Tips',
    addHotspot: 'Add Hotspot',
  },
  SelectNetworkScreen: {
    title: 'What Network?',
    subtitle: 'What network does your Hotspot create coverage for?',
    helpText: 'I’m not sure what I have',
  },
  SelectDeviceScreen: {
    title: 'What Device?',
    subtitle: 'Which device to do wish to deploy?',
    indoor: 'Indoor Hotspot',
    outdoor: 'Outdoor <quaternary>Hotspot</quaternary>',
  },
  KeepYourBoxScreen: {
    title: 'Keep Your Box',
    subtitle: 'You will need the QR Code on the box to deploy your Hotspot.',
  },
  ConnectEthernetScreen: {
    title: 'Connect Ethernet',
    titleIndoor: 'Connect Ethernet\n& Power',
    subtitle: 'Connect the powered ethernet cable to the rear of the Hotspot.',
    subtitleIndoor:
      'Connect the powered ethernet cable to the rear of the Hotspot.',
    helpText: 'The status light should turn blue.',
    help: 'Help',
  },
  ConnectToHotspotScreen: {
    title: 'Connect to Hotspot',
    subtitle: 'We’ll use your camera to scan the QR code on the Hotspot box.',
    requestCameraPermissions: 'Request Camera Permissions',
    perissionsGranted: 'Camera Permissions Granted',
    perissionsDenied: 'Camera Permissions Denied',
    manualEntry: 'Manual Entry',
  },
  ScanQRCodeScreen: {
    title: 'Scan QR Code',
    subtitle: 'Scan the QR code on the box of the Helium Mobile Hotspot.',
    manualEntry: 'Manual Entry',
    validatingQRCode: 'Validating QR Code...',
    tryAgain: 'There was an error, please check your network and try again.',
  },
  AcquireLocationScreen: {
    title: 'Acquiring Location',
    subtitle:
      'Your Hotspot is waiting for a GPS signal to determine its location.',
    gpsHelp: 'GPS Help',
    isThisCorrect: 'Is this correct?',
    locationDetermined:
      'We’ve determined the following location via GPS. Does it look correct? Rescan, if not.',
  },
  SelectFloorScreen: {
    title: 'What Floor?',
    subtitle: 'What floor is your Hotspot on?',
    selectPlaceholder: 'Select Floor',
    approx: 'Approx. {{meters}}m',
    floor: 'Floor {{floor}}',
  },
  SetDirectionScreen: {
    title: 'Rotate dial to\nset direction',
    subtitle:
      'Your Hotspot should face the same direction. Point towards where you expect traffic.',
  },
  AddToWalletScreen: {
    title: 'WELCOME',
    addressDetails: 'Floor {{floor}} | Pointing {{direction}}',
    addressDetailsIndoor: 'Floor {{floor}}',
    errorOnboarding:
      'There was an error onboarding your device. Please make sure your device is connected to the internet and try again.',
  },
  ManualEntryScreen: {
    title: 'Manual Entry',
    subtitle: 'Enter the network name and password from the Hotspot’s box.',
    scanQRCode: 'Scan QR Code',
    tryAgain:
      'There was an error, please check your network name and password and try again.',
  },
  OnboardingSheet: {
    addToWallet: 'Add to wallet',
  },
  ClaimTokensPage: {
    title: 'Unclaimed Tokens',
    subtitle:
      'Your Hotspots have earned the following tokens, that you need to claim.',
    claimTokens: 'Claim Tokens',
  },
  HotspotDetails: {
    heliumMobileHotspot: 'Helium Mobile Hotspot Mines MOBILE.',
    heliumIoTHotspot: 'Helium IoT Hotspot Mines HNT.',
    deployed: 'Deployed {{date}}',
  },
  ConnectViaBluetoothScreen: {
    title: 'Connect via Bluetooth',
    subtitle: 'All supported Hotspots use Bluetooth for initial setup.',
    body: 'Follow the manufacturer’s instructions to power up your device and enter Bluetooth pairing mode.',
    scanForHotspots: 'Scan for Hotspots',
  },
}
